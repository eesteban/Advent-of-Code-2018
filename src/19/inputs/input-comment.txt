#ip 4
  0, 1, 2, 3, 4,  5
# a, b, c, d, ip, e

0 addi 4 16 4 # ip += 16 => GOTO 17

1 seti 1 9 3 # d = 1
2 seti 1 6 2 # c = 1

if(c*d == b){ GOTO 7 }
else { GOTO 8 }

7 addr 3 0 0 # a += d
8 addi 2 1 2 # c += 1

if( c>b ){ GOTO 12 }
else { 1 }

12 addi 3 1 3 # d += 1

if (d > b) {  RETURN; }
else { GOTO 1 }

17 addi 1 2 1 # b += 2 => b = 2
18 mulr 1 1 1 # b = b * b  => b = 4
19 mulr 4 1 1 # b = 19 * b  => b = 76
20 muli 1 11 1 # b =
21 addi 5 1 5 # e += 1
22 mulr 5 4 5 # e =
23 addi 5 2 5 # e += 2
24 addr 1 5 1 # b += e

PART1: GOTO 1
Part2 : GOTO 27

25 addr 4 0 4 # ip += a
26 seti 0 1 4 # ip = 0

27 setr 4 3 5 # e = ip
28 mulr 5 4 5 # e =
29 addr 4 5 5 # e =
30 mulr 4 5 5 # e =
31 muli 5 14 5 # e =
32 mulr 5 4 5 # e =
33 addr 1 5 1 # b =
=>
INITIALISE b AND e

34 seti 0 6 0 # a = 0
35 seti 0 7 4 # ip = 0 => GOTO 1